name: Build, Scan and Push to GHCR

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v*'

jobs:
  ci_pipeline:
    name: Build, scan and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Metadata (tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=true
          tags: |
            type=sha,prefix=sha-,format=short
            type=semver,pattern={{version}}

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: DockerHub login (cache)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build amd64 image (for CVE scan)
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weatherapp-cache:cache
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weatherapp-cache:cache,mode=max
          tags: app:amd64

      - name: Scan image with Trivy (only amd64)
        uses: aquasecurity/trivy-action@0.13.0
        with:
          image-ref: app:amd64
          format: table
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          exit-code: 1

      - name: Push multi-arch image to GHCR
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weatherapp-cache:cache
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/weatherapp-cache:cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
